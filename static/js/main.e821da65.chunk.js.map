{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Users/Users.module.css","Components/Header/Header.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/NavBar/NavBar.module.css","Components/NavBar/NavBar.tsx","Components/News/News.tsx","Components/Settings/Settings.tsx","Components/Music/Music.tsx","Redux/ProfileReducer.ts","Redux/DialogsReducer.ts","Redux/SideBarReducer.ts","Redux/Store.ts","Components/Dialogs/DialogsItem/DialogsItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx","Redux/UsersReducer.ts","assets/Img/user-png-image-9.png","Components/Users/Users.tsx","Components/Users/UsersContainer.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Header/Header.tsx","Redux/AuthReducer.ts","Components/Header/HeaderContainer.tsx","App.tsx","Redux/ReduxStore.ts","index.tsx"],"names":["module","exports","NavBar","className","s","nav","to","activeClassName","ActiveItem","item","News","Settings","Music","InitialState","posts","message","id","v1","likesCount","newPostText","profile","ProfileReducer","state","action","type","newPost","newState","push","NewText","dialogsData","name","messagesData","newMessageText","DialogsReducer","body","SideBarReducer","UpdateNewPostTextActionCreator","DialogItem","props","Message","Dialogs","dialogsElement","map","d","messagesElement","m","dialogs","dialogsItems","messages","value","onChange","e","onNewMessageChange","currentTarget","placeholder","onClick","onSendMessageClick","DialogsContainer","connect","DialogsPage","dispatch","text","users","PageSize","totalUsersCount","currentPage","isFetching","UsersReducer","StateCopy","u","UserId","isFollowed","Page","usersCount","Users","PagesCount","Math","ceil","pages","i","p","onPageChanged","selectedPage","src","photos","small","UserPhoto","photo","unFollow","follow","status","UsersContainerComponent","setCurrentPage","toggleIsFetching","axios","get","then","response","setUsers","data","items","this","setTotalUsersCount","totalCount","CircularProgress","React","Component","UsersPage","ProfileInfo","info","fullName","large","alt","aboutMe","lookingForAJob","lookingForAJobDescription","color","Post","MyPosts","postsElements","newPostElement","createRef","title","area","updateNewPostText","ref","addButton","addPost","MyPostsContainer","ProfilePage","Profile","content","withUrlDataContainerComponent","withRouter","useEffect","userId","match","params","setUserProfile","ProfileContainer","Header","header","loginBlock","isAuth","login","email","AuthReducer","HeaderContainer","withCredentials","resultCode","setAuthUserData","Auth","App","store","getState","path","render","UsersContainer","reducers","combineReducers","SideBar","createStore","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.e821da65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3tpU9\",\"dialogsItems\":\"Dialogs_dialogsItems__ienY8\",\"messages\":\"Dialogs_messages__3m0ZH\",\"message\":\"Dialogs_message__3pa39\",\"item\":\"Dialogs_item__2lstC\",\"ActiveItem\":\"Dialogs_ActiveItem__tWhqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__qY-Gi\",\"selectedPage\":\"Users_selectedPage__mzLTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1riTh\",\"loginBlock\":\"Header_loginBlock__2AF6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__1Kbs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3RXIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1i1C_\",\"item\":\"NavBar_item__1iqZI\",\"ActiveItem\":\"NavBar_ActiveItem__2m0l5\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './NavBar.module.css'\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <div className={s.nav}>\r\n        <div>\r\n          <NavLink to='/profile' activeClassName={s.ActiveItem} className={s.item}>Profile</NavLink>\r\n        </div>\r\n        <div>\r\n          <NavLink to='/dialogs' activeClassName={s.ActiveItem} className={s.item}>Messages</NavLink>\r\n        </div>\r\n        <div>\r\n          <NavLink to='/news' activeClassName={s.ActiveItem} className={s.item}>News</NavLink>\r\n        </div>\r\n            <div>\r\n                <NavLink to='/users' activeClassName={s.ActiveItem} className={s.item}>Users</NavLink>\r\n            </div>\r\n        <div>\r\n          <NavLink to='/music' activeClassName={s.ActiveItem} className={s.item}>Music</NavLink>\r\n        </div>\r\n        <div>\r\n          <NavLink to='settings' activeClassName={s.ActiveItem} className={s.item}>Settings</NavLink>\r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News =() => {\r\n    return(\r\n        <span>News</span>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings =() => {\r\n    return(\r\n        <span>Settings</span>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nconst Music =() => {\r\n    return(\r\n        <span>Music</span>\r\n    )\r\n}\r\n\r\nexport default Music","import {v1} from \"uuid\";\r\nimport {ProfilePageType} from \"./Store\";\r\n\r\nlet InitialState = {\r\n    posts: [\r\n        {message: 'Я русский', id: v1(), likesCount: 12},\r\n        {message: 'I am not Russian', id: v1(), likesCount: 1},\r\n        {message: 'I am learn React', id: v1(), likesCount: 23},\r\n    ],\r\n    newPostText: '',\r\n    profile:null\r\n}\r\n\r\nexport const ProfileReducer = (state: ProfilePageType = InitialState, action: any) => {\r\n    switch (action.type) {\r\n\r\n        case 'ADD-POST': {\r\n            let newPost = {message: state.newPostText, id: v1(), likesCount: 0}\r\n            let newState = {...state}\r\n            newState.posts = [...state.posts]\r\n            newState.posts.push(newPost)\r\n            newState.newPostText = ''\r\n            return (newState)\r\n        }\r\n\r\n        case 'UPDATE-NEW-POST-TEXT' :\r\n            let newState = {...state}\r\n            newState.newPostText = action.NewText\r\n            return newState\r\n\r\n        case 'SET-USER-PROFILE' : {\r\n            return{...state,profile:action.profile}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const setUserProfile = (profile: any) => ({type: 'SET-USER-PROFILE', profile})","import {v1} from \"uuid\";\r\nimport {DialogsPageType, StateType} from \"./Store\";\r\nimport {DialogsDataArrayType, MessagesDataArrayType} from \"../Components/Dialogs/Dialogs\";\r\n\r\nexport type InitialStateType = {\r\n    dialogsData:DialogsDataArrayType\r\n    messagesData:MessagesDataArrayType\r\n    newMessageText:string\r\n}\r\n\r\nlet InitialState:InitialStateType = {\r\n    dialogsData:\r\n        [{id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Viktor'},\r\n        {id: v1(), name: 'Lesha'},\r\n        {id: v1(), name: 'Elena'},\r\n        {id: v1(), name: 'Dima'},\r\n        {id: v1(), name: 'Ivan'},]\r\n    ,\r\n    messagesData: [\r\n        {message: 'Hi', id: v1()},\r\n        {message: 'How are you?', id: v1()},\r\n        {message: 'Lets drink beer today', id: v1()},\r\n    ],\r\n    newMessageText:''\r\n}\r\n\r\nexport const DialogsReducer = (state:DialogsPageType = InitialState, action: any) => {\r\n\r\n\r\n\r\n    switch(action.type) {\r\n        case \"UPDATE-NEW-MESSAGE-TEXT\" :{\r\n            state.newMessageText = action.body\r\n            return {...state}}\r\n\r\n        case \"SEND-MESSAGE\" :\r\n            let body = state.newMessageText\r\n            state.messagesData.push({message:body,id:v1()})\r\n            state.newMessageText = ''\r\n            return {...state}\r\n        default:return state\r\n    }\r\n}","import {SideBarType} from \"./Store\";\r\n\r\nlet InitialState = {}\r\n\r\nexport const SideBarReducer = (state:SideBarType = InitialState,action:any) => {\r\n\r\n    return(state)\r\n}","import {MessagesDataType} from './../Components/Dialogs/Dialogs';\r\nimport {v1} from \"uuid\"\r\nimport {DialogsDataType} from \"../Components/Dialogs/Dialogs\"\r\nimport {postsType} from \"../Components/Profile/MyPosts/MyPosts\"\r\nimport {ProfileReducer} from \"./ProfileReducer\";\r\nimport {DialogsReducer} from \"./DialogsReducer\";\r\nimport {SideBarReducer} from \"./SideBarReducer\";\r\nimport {userType} from \"./UsersReducer\";\r\n\r\nexport type StoreType = {\r\n    _state: StateType\r\n    _callSubscriber: () => void\r\n    getState: () => StateType\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: any) => void\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<postsType>\r\n    newPostText: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogsData: Array<DialogsDataType>\r\n    messagesData: Array<MessagesDataType>\r\n    newMessageText:string\r\n}\r\n\r\nexport type SideBarType = {}\r\n\r\nexport type UsersPageType = {\r\n    users:Array<userType>\r\n    PageSize:number\r\n    totalUsersCount:number\r\n    currentPage:number\r\n    isFetching:boolean\r\n}\r\n\r\nexport type StateType = {\r\n    ProfilePage: ProfilePageType\r\n    DialogsPage: DialogsPageType\r\n    SideBar:SideBarType\r\n    UsersPage:UsersPageType\r\n}\r\n\r\nlet store: any = {\r\n    _state: {\r\n        ProfilePage: {\r\n            posts: [\r\n                {message: 'Я русский', id: v1(), likesCount: 12},\r\n                {message: 'I am not Russian', id: v1(), likesCount: 1},\r\n                {message: 'I am learn React', id: v1(), likesCount: 23},\r\n            ],\r\n            newPostText: ''\r\n        },\r\n\r\n        DialogsPage: {\r\n            dialogsData: [\r\n                {id: v1(), name: 'Sasha'},\r\n                {id: v1(), name: 'Viktor'},\r\n                {id: v1(), name: 'Lesha'},\r\n                {id: v1(), name: 'Elena'},\r\n                {id: v1(), name: 'Dima'},\r\n                {id: v1(), name: 'Ivan'}\r\n            ],\r\n            messagesData: [\r\n                {message: 'Hi', id: v1()},\r\n                {message: 'How are you?', id: v1()},\r\n                {message: 'Lets drink beer today', id: v1()}\r\n            ],\r\n            newMessageText:''\r\n        },\r\n\r\n        SideBar:{}\r\n    },\r\n\r\n    _callSubscriber() {\r\n        console.log('State changed')\r\n    },\r\n\r\n    getState() {\r\n        return (this._state)\r\n    },\r\n\r\n    subscribe(observer: () => void) {\r\n        this._callSubscriber = observer\r\n    },\r\n\r\n    dispatch(action: any) {\r\n\r\n        ProfileReducer(this._state.ProfilePage,action)\r\n        DialogsReducer(this._state.DialogsPage,action)\r\n        SideBarReducer(this._state.SideBar,action)\r\n            this._callSubscriber()\r\n        }\r\n    }\r\n\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {type: 'ADD-POST'}\r\n}\r\n\r\nexport const UpdateNewPostTextActionCreator = (NewText: string) => {\r\n    return {type: 'UPDATE-NEW-POST-TEXT', NewText: NewText}\r\n}\r\n\r\nexport const UpdateNewMessageTextActionCreator = (body:string) => {\r\n    return {type: 'UPDATE-NEW-MESSAGE-TEXT', body:body}\r\n}\r\n\r\nexport const SendMessageActionCreator = () => {\r\n    return {type: 'SEND-MESSAGE'}\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { v1 } from 'uuid';\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n    return (\r\n        <div >\r\n            <NavLink className={s.item} activeClassName={s.ActiveItem} to={'/dialogs/' + props.id}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport { v1 } from 'uuid';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message","import React, {ChangeEvent} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {v1} from 'uuid';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport {DialogsPageType, SendMessageActionCreator, UpdateNewMessageTextActionCreator} from \"../../Redux/Store\";\r\n\r\n\r\ntype DialogsPropsType = {\r\n    onNewMessageChange: (text: string) => void\r\n    onSendMessageClick: () => void\r\n    dialogsData: Array<DialogsDataType>\r\n    messagesData: Array<MessagesDataType>\r\n    newMessageText:string\r\n}\r\n\r\nexport type DialogsDataType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type MessagesDataType = {\r\n    id: string\r\n    message: string\r\n}\r\n\r\nexport type DialogsDataArrayType = Array<DialogsDataType>\r\n\r\nexport type MessagesDataArrayType = Array<MessagesDataType>\r\n\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n    let dialogsElement = props.dialogsData.map((d:DialogsDataType) =>  <DialogItem key={d.id} name={d.name} id={d.id} />)\r\n    let messagesElement = props.messagesData.map((m:MessagesDataType) => <Message key={m.id} message={m.message}/>)\r\n    let newMessageText = props.newMessageText\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessageClick()\r\n    }\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onNewMessageChange(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <div><textarea value={newMessageText} onChange={onNewMessageChange}\r\n                                   placeholder={'Enter your message'}></textarea></div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React, {ChangeEvent} from 'react';\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport {\r\n    DialogsPageType,\r\n    SendMessageActionCreator,\r\n    StateType,\r\n    UpdateNewMessageTextActionCreator\r\n} from \"../../Redux/Store\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport type DialogsDataType ={\r\n    id:string\r\n    name:string\r\n}\r\n\r\nlet mapStateToProps = (state:StateType) => {\r\nreturn {\r\n    dialogsData:state.DialogsPage.dialogsData,\r\n    messagesData:state.DialogsPage.messagesData,\r\n    newMessageText:state.DialogsPage.newMessageText\r\n}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        onNewMessageChange:(text:string) => {dispatch(UpdateNewMessageTextActionCreator(text))},\r\n        onSendMessageClick:() => {dispatch(SendMessageActionCreator())}\r\n    }\r\n\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer","import {v1} from \"uuid\";\r\n\r\nexport type userType = {\r\n    id: string\r\n    isFollowed: boolean\r\n    photoUrl: string\r\n    name: string\r\n    status: string\r\n    photos: any\r\n}\r\n\r\n\r\nlet InitialState = {\r\n    users: [],\r\n    PageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching:false\r\n}\r\n\r\n\r\nconst UsersReducer = (state: any = InitialState, action: any) => {\r\n    switch (action.type) {\r\n\r\n        case 'FOLLOW' : {\r\n            let StateCopy = {\r\n                ...state,\r\n                users: state.users.map((u: userType) => {\r\n                    if (u.id === action.UserId) {\r\n                        return {...u, isFollowed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n            return StateCopy\r\n        }\r\n\r\n        case 'UNFOLLOW' :\r\n            let StateCopy = {\r\n                ...state,\r\n                users: state.users.map((u: userType) => {\r\n                    if (u.id === action.UserId) {\r\n                        return {...u, isFollowed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n            return StateCopy\r\n\r\n        case 'SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        case 'SET-CURRENT-PAGE':{\r\n            return{...state,currentPage:action.Page}\r\n        }\r\n\r\n        case 'SET-TOTAL-USERS-COUNT':{\r\n            return{...state,totalUsersCount:action.usersCount}\r\n        }\r\n\r\n        case 'TOGGLE-IS-FETCHING ' :{\r\n            return{...state,isFetching:action.isFetching}\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const follow = (UserId: string) => ({type: 'FOLLOW', UserId})\r\nexport const unFollow = (UserId: string) => ({type: 'UNFOLLOW', UserId})\r\nexport const setUsers = (users: any) => ({type: 'SET-USERS', users})\r\nexport const setCurrentPage = (Page:number) => ({type:'SET-CURRENT-PAGE',Page})\r\nexport const setTotalUsersCount = (usersCount:number) => ({type:'SET-TOTAL-USERS-COUNT',usersCount})\r\nexport const toggleIsFetching = (isFetching:boolean) => ({type:'TOGGLE-IS-FETCHING ',isFetching})\r\n\r\nexport default UsersReducer","export default __webpack_public_path__ + \"static/media/user-png-image-9.ab7efdc7.png\";","import React from 'react';\r\nimport {userType} from \"../../Redux/UsersReducer\";\r\nimport UserPhoto from \"../../assets/Img/user-png-image-9.png\";\r\nimport s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type UsersPropsType = {\r\n    users: Array<userType>\r\n    PageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    follow: (UserId: string) => void\r\n    unFollow: (UserId: string) => void\r\n    setUsers: (users: any) => void\r\n    setCurrentPage: (Page: number) => void\r\n    setTotalUsersCount: (usersCount: number) => void\r\n    onPageChanged: (p: any) => void\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n    let PagesCount = Math.ceil(props.totalUsersCount / props.PageSize)\r\n\r\n    let pages: any = []\r\n    for (let i = 1; i <= PagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n\r\n\r\n        <div>\r\n\r\n            <div>\r\n                {pages.map((p: any) => <span onClick={(e) => {\r\n                    props.onPageChanged(p)\r\n                }} className={props.currentPage === p ? s.selectedPage : ''}>{p}</span>)}\r\n            </div>\r\n            {\r\n                props.users.map((u: userType) => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : UserPhoto} className={s.photo}/>\r\n    </NavLink>\r\n                        </div>\r\n    </span>\r\n                        <span>\r\n    <div>\r\n        {u.isFollowed\r\n            ? <button onClick={() => props.unFollow(u.id)}>Unfollow</button>\r\n            : <button onClick={() => props.follow(u.id)}>Follow</button>}\r\n    </div>\r\n    </span>\r\n                        <span>\r\n    <span>\r\n        <div>{u.name}</div>\r\n    <div>{u.status}</div>\r\n    </span>\r\n    <span>\r\n    <div>{\"u.location.city\"}</div>\r\n    <div>{\"u.location.country\"}</div>\r\n    </span>\r\n    </span>\r\n\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../Redux/Store\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers, toggleIsFetching,\r\n    unFollow,\r\n    userType\r\n} from \"../../Redux/UsersReducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport type UsersAPIPropsType = {\r\n    users: Array<userType>\r\n    PageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching:boolean\r\n    follow: (UserId: string) => void\r\n    unFollow: (UserId: string) => void\r\n    setUsers: (users: any) => void\r\n    setCurrentPage: (Page: number) => void\r\n    setTotalUsersCount: (usersCount: number) => void\r\n    toggleIsFetching:(isFetching:boolean) => void\r\n\r\n}\r\n\r\n\r\nclass UsersContainerComponent extends React.Component<UsersAPIPropsType, StateType> {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.PageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalUsersCount(response.data.totalCount)\r\n        })\r\n    }\r\n\r\n    onPageChanged = (p: any) => {\r\n        this.props.setCurrentPage(p)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.PageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (<>\r\n                {this.props.isFetching?<CircularProgress /> : null}\r\n            <Users users={this.props.users}\r\n                   setUsers={this.props.setUsers}\r\n                   currentPage={this.props.currentPage}\r\n                   isFetching={this.props.isFetching}\r\n                   follow={this.props.follow}\r\n                   PageSize={this.props.PageSize}\r\n                   setTotalUsersCount={this.props.setTotalUsersCount}\r\n                   setCurrentPage={this.props.setCurrentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   unFollow={this.props.unFollow}\r\n                   onPageChanged={this.onPageChanged}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state:StateType) => {\r\nreturn {\r\n    users:state.UsersPage.users,\r\n    PageSize:state.UsersPage.PageSize,\r\n    totalUsersCount:state.UsersPage.totalUsersCount,\r\n    currentPage:state.UsersPage.currentPage,\r\n    isFetching:state.UsersPage.isFetching\r\n}\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps,{\r\n    follow,\r\n    unFollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n}) (UsersContainerComponent)","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport type ProfileInfoPropsType = {\r\n    profile: any\r\n}\r\n\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\r\n    if (!props.profile) {\r\n        return (<CircularProgress color=\"secondary\"/>)\r\n    }\r\n        return (\r\n            <div className={s.info}>\r\n               <div> {props.profile.fullName}</div>\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <div>\r\n                <span>{props.profile.aboutMe}</span>\r\n                </div>\r\n                {props.profile.lookingForAJob\r\n                    ?<div><span>Ищу работу</span> <div><span>{props.profile.lookingForAJobDescription}</span></div></div>\r\n                    : <span>Не ищу работу</span>}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nexport type PostPropsType = {\r\n    \r\n    message:string\r\n    likesCount:number\r\n}\r\n\r\nconst Post =(props:PostPropsType) => {\r\n\r\n    return(\r\n        <div className={s.item}>\r\n            <img src='https://i.pinimg.com/236x/74/05/5f/74055f83bfbdc20fdc1f9d1fc116fd26.jpg' />\r\n            {props.message}\r\n            <br></br>\r\n            {props.likesCount} likes\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React, {ChangeEvent} from 'react';\r\nimport { v1 } from 'uuid';\r\nimport { addPostActionCreator, UpdateNewPostTextActionCreator } from '../../../Redux/Store';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport PostPropsType from './Post/Post'\r\n\r\nexport type postsType ={\r\n  message:string\r\n  id:string\r\n  likesCount:number\r\n}\r\n\r\nexport type MyPostsPropsType ={\r\n  posts:Array<postsType>\r\n  newPostText:string\r\n  updateNewPostText:(text:string) => void\r\n  addPost:() =>void\r\n}\r\n\r\nconst MyPosts = (props:MyPostsPropsType) => {\r\n  let postsElements =  props.posts.map((p:postsType) => <Post message={p.message} likesCount={p.likesCount} /> )\r\n\r\n  let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n  let addPost = () => {\r\n    props.addPost()\r\n  }\r\n\r\n  let updateNewPostText = (e:ChangeEvent<HTMLTextAreaElement>) => {\r\n    props.updateNewPostText(e.currentTarget.value)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.title}>\r\n      My Posts\r\n      </div>\r\n\r\n        <div className={s.area}>\r\n          <textarea onChange={updateNewPostText} value={props.newPostText} ref={newPostElement} />\r\n        </div>\r\n\r\n        <div className={s.addButton}>\r\n          <button onClick={addPost}>Add Post</button>\r\n        </div>\r\n\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport { v1 } from 'uuid';\r\nimport {addPostActionCreator, StateType, UpdateNewPostTextActionCreator} from '../../../Redux/Store';\r\nimport s from './MyPosts.module.css'\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport type postsType ={\r\n  message:string\r\n  id:string\r\n  likesCount:number\r\n}\r\n\r\nlet mapStateToProps = (state:StateType) => {\r\n  return{\r\n    posts:state.ProfilePage.posts,\r\n    newPostText:state.ProfilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:any) => {\r\n  return {\r\n    addPost:() => {dispatch(addPostActionCreator())},\r\n    updateNewPostText: (text:string) => {\r\n      if(text) {\r\n        dispatch(UpdateNewPostTextActionCreator(text))\r\n      }\r\n      else {\r\n        dispatch(UpdateNewPostTextActionCreator(''))\r\n      }\r\n    }\r\n    }\r\n  }\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n\r\n","import React from 'react';\r\nimport MyPosts, {postsType} from './MyPosts/MyPosts';\r\n\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\ntype ProfilePropsType = {\r\n    profile:any\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile} from \"../../Redux/ProfileReducer\";\r\nimport {StateType} from \"../../Redux/Store\";\r\nimport {withRouter,RouteComponentProps} from 'react-router';\r\n\r\ntype PathParamType = {\r\nuserId:string\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    profile:any\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    setUserProfile:(profile:any) => void\r\n}\r\n\r\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamType> & OwnPropsType\r\n\r\n\r\nlet ProfileAPIContainer = (props:PropsType) => {\r\n    useEffect(() => {\r\n        let userId = props.match.params.userId\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n            .then(response => {\r\n                props.setUserProfile(response.data)\r\n            })\r\n    }, [])\r\n    return (\r\n        <Profile profile={props.profile}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state:any):mapStatePropsType => ({\r\nprofile:state.ProfilePage.profile\r\n})\r\n\r\nlet withUrlDataContainerComponent = withRouter(ProfileAPIContainer)\r\nconst ProfileContainer = connect(mapStateToProps,{setUserProfile})(withUrlDataContainerComponent)\r\nexport default ProfileContainer","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type HeaderPropsType = {\r\n    isAuth:boolean\r\n    login:string\r\n}\r\n\r\nconst Header = (props:HeaderPropsType) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <img src='https://cdn.logo.com/hotlink-ok/logo-social-sq.png'/>\r\n\r\n            <div className={s.loginBlock}>\r\n\r\n                {props.isAuth?props.login :<NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header","import {v1} from \"uuid\";\r\n\r\n\r\nlet InitialState = {\r\n    userId: null,\r\n    email:\"null\",\r\n    login:\"null\",\r\n    isFetching:false,\r\n    isAuth:false,\r\n}\r\n\r\n\r\nconst AuthReducer = (state: any = InitialState, action: any) => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return{...state,...action.data,isAuth:true}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId:any,email:string,login:string) => ({type:'SET-USER-DATA',data: {userId, email, login}})\r\n\r\nexport default AuthReducer","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {StateType} from \"../../Redux/Store\";\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {setAuthUserData} from \"../../Redux/AuthReducer\";\r\n\r\nexport type HeaderContainerPropsType = {\r\n    isAuth:boolean\r\n    login:string\r\n    setAuthUserData: (userId: any, email: string, login: string) => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType, StateType> {\r\n\r\n    componentDidMount() {\r\n        // this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {withCredentials: true}).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data\r\n                this.props.setAuthUserData(id, email, login)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Header isAuth={this.props.isAuth} login={this.props.login}/>\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth:state.Auth.isAuth,\r\n    login:state.Auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData})(HeaderContainer)","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './Components/NavBar/NavBar';\r\nimport { Route } from 'react-router';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport News from './Components/News/News';\r\nimport Settings from './Components/Settings/Settings';\r\nimport Music from './Components/Music/Music';\r\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\n\r\ntype AppPropsType ={\r\ndispatch:(action:any) => void\r\n  store:any\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction App(props:AppPropsType) {\r\n\r\n  let state = props.store.getState()\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n      <HeaderContainer />\r\n      <NavBar />\r\n      <div className='content'>\r\n      <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\r\n      <Route path='/dialogs' render={() => <DialogsContainer />} />\r\n      <Route path='/news' render={() => <News />} />\r\n        <Route path='/users' render={() => <UsersContainer />} />\r\n      <Route path='/music' render={() => <Music />} />\r\n      <Route path='/settings' render={() => <Settings />} />\r\n      </div>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {ProfileReducer} from \"./ProfileReducer\";\r\nimport {DialogsReducer} from \"./DialogsReducer\";\r\nimport {SideBarReducer} from \"./SideBarReducer\";\r\nimport UsersReducer from \"./UsersReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage:ProfileReducer,\r\n    DialogsPage:DialogsReducer,\r\n    UsersPage:UsersReducer,\r\n    SideBar:SideBarReducer,\r\n    Auth:AuthReducer,\r\n})\r\nlet store = createStore(reducers)\r\n\r\nexport default  store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './Redux/ReduxStore'\r\nimport {StateType} from \"./Redux/Store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n      <App dispatch={store.dispatch.bind(store)} store={store}  />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n\r\n\r\n"],"sourceRoot":""}